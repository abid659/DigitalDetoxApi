// <auto-generated />
using System;
using DigitalDetox.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigitalDetox.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.18");

            modelBuilder.Entity("DigitalDetox.API.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuestionText")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("QuestionId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionId = 1,
                            QuestionText = "প্রতিদিন ২ লিটার পানি পান করেছি?"
                        },
                        new
                        {
                            QuestionId = 2,
                            QuestionText = "আজ আমার মা বা বাবাকে বলেছি ভালোবাসি?"
                        },
                        new
                        {
                            QuestionId = 3,
                            QuestionText = "আজ ফোন ২ ঘন্টার কম ব্যবহার করেছি?"
                        },
                        new
                        {
                            QuestionId = 4,
                            QuestionText = "এই সপ্তাহে আমি কাউকে সাহায্য করেছি?"
                        },
                        new
                        {
                            QuestionId = 5,
                            QuestionText = "এই সপ্তাহে আমি কোনো বই পড়েছি?"
                        },
                        new
                        {
                            QuestionId = 6,
                            QuestionText = "বাবা-মার সাথে খাওয়ার সময় কাটিয়েছি?"
                        },
                        new
                        {
                            QuestionId = 7,
                            QuestionText = "নিজের শরীরের খেয়াল রেখেছি?"
                        },
                        new
                        {
                            QuestionId = 8,
                            QuestionText = "রাত ১১ টার আগেই ঘুমিয়ে পড়েছি?"
                        });
                });

            modelBuilder.Entity("DigitalDetox.API.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Roll")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DigitalDetox.API.Models.StudentResponse", b =>
                {
                    b.Property<int>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Answer")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ResponseId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentResponses");
                });

            modelBuilder.Entity("DigitalDetox.API.Models.StudentResponse", b =>
                {
                    b.HasOne("DigitalDetox.API.Models.Question", "Question")
                        .WithMany("StudentResponses")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalDetox.API.Models.Student", "Student")
                        .WithMany("StudentResponses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DigitalDetox.API.Models.Question", b =>
                {
                    b.Navigation("StudentResponses");
                });

            modelBuilder.Entity("DigitalDetox.API.Models.Student", b =>
                {
                    b.Navigation("StudentResponses");
                });
#pragma warning restore 612, 618
        }
    }
}
